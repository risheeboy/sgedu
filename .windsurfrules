# App manifest

## Purpose of App

- To help students with exam preperation

## Features

- Practice with existing questions
- Generate new questions
- Create and play quizzes with others

## Tech Stack

- Flutter web-app (UI)
- Cloud Functions for Firebase (Backend)
- Firestore (Database)
- Firebase Storage (Image store)
- Firebase Hosting (Website deployment)
- Firebase Auth (Google sign-in)

## Guidelines

- AI & embedding APIs should be called from inside Firebase functions and not from the flutter UI code. 
- LLM text generation API calls should include response JSON schema. 
- Use typescript for node functions.
- After making flutter changes, check if any imports are missing for new code and run 'flutter analyze' to check if any errors.
- After making firestore changes, check if any changes are required in firestore.rules or firestore.indexes.json file.

## Code Organization

### Key Directories

- Flutter services for Firebase interactions (`lib/services/`)
- Flutter data models (`lib/models/`)
- Flutter screens for different screens (`lib/screens/`)
- Flutter reusable UI components (`lib/widgets/`)
- Flutter integration tests in (`lib/testing/integration/`)

### Firebase Configuration Files

- Firebase project configuration (`firebase.json`)
- Data security rules (`firestore.rules`)
- File storage rules (`storage.rules`)
- CORS settings (`cors.json`)
- Firebase IDs/keys (`lib/firebase_options.dart`)

### Key Flutter Dependencies

- cloud_firestore- Firestore integration
- cloud_functions- Firebase Functions integration
- firebase_auth- Authentication
- flutter_markdown- Content rendering
